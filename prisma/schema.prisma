generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  password     String
  fullname     String
  address      String
  phone        String   @unique
  role         ROLE     @default(BASIC)
  created_at   DateTime @default(now())
  modified_at  DateTime @updatedAt
  image_url    String
  OrderDetails Order[]
}

model Category {
  id               Int               @id @default(autoincrement())
  label            String            @unique
  description      String
  image_url        String
  created_at       DateTime          @default(now())
  modified_at      DateTime          @updatedAt
  Category_Product CategoryProduct[]
}

model Product {
  id               String            @id @default(uuid())
  name             String            @unique
  price            Float
  description      String
  quantity         Int
  image_url        String
  // discount_id      String
  created_at       DateTime          @default(now())
  modified_at      DateTime          @updatedAt
  Category_Product CategoryProduct[]
  OrderItem        OrderItem[]
  // discount         Discount          @relation(fields: [discount_id], references: [id])
}

// model Discount {
//   id               String    @id @default(uuid())
//   desc             String
//   discount_percent Float
//   created_at       DateTime  @default(now())
//   modified_at      DateTime  @updatedAt
//   Product          Product[]
// }

model CategoryProduct {
  product_id  String
  category_id Int
  category    Category @relation(fields: [category_id], references: [id])
  product     Product  @relation(fields: [product_id], references: [id])

  @@id([product_id, category_id])
}

model Payment {
  id           String   @id @default(uuid())
  amount       Float
  provider     String
  created_at   DateTime @default(now())
  modified_at  DateTime @updatedAt
  OrderDetails Order[]
}

model Order {
  id          String      @id @default(uuid())
  user_id     String
  payment_id  String
  total       Float
  is_success  Boolean
  created_at  DateTime    @default(now())
  modified_at DateTime    @updatedAt
  payment     Payment     @relation(fields: [payment_id], references: [id])
  user        User        @relation(fields: [user_id], references: [id])
  OrderItem   OrderItem[]
}

model OrderItem {
  id         String  @id @default(uuid())
  order_id   String
  product_id String
  quantity   Int
  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
}

enum ROLE {
  ADMIN
  BASIC
}
